@e0 000 00 000 110 11
@e1 000 00 001 111 00
@e2 000 00 010 111 00
@e3 000 00 011 111 01

LDR R0, LEDR_BASE // SW is LEDR_BASE offset 0010 0000
LDR R1, [R0, #64]
STR R1, [R0, #-1]
MOV R1, LSL #1
MOV R1, LSL #1
MOV R1, LSL #1
MOV R1, LSL #1
MOV R2, #15
LDR R3, [R0, #64]
AND R3, R3, R2
ADD R3, R3, R1
STR R3, [R0]


// LEDR BASE AND SW BASE
@d6 0000000101000000
@d7 0000000100000000

// WHERE TO SAVE REG
@d8 0000000000000000
@d9 0000000000000000
@da 0000000000000000
@db 0000000000000000
@dc 0000000000000000
@dd 0000000000000000
@de 0000000000000000
@df 0000000000000000

// SAVE THE REG 
@e0 000 00 000 111 11
@e1 000 00 001 111 10
@e2 000 00 010 111 01
@e3 000 00 011 111 00
@e4 000 00 100 110 11

// LOAD LEDR AND SW BASE
@e5 010 00 000 101 10 
@e6 010 00 100 101 01 

// LOAD SWITCHES TO R1
@e7 0110010000100000 

// SHIFT 4x
@e8 1100000000101001
@e9 1100000000101001
@ea 1100000000101001
@eb 1100000000101001

// MEAT
@ec 1101001000001111
@ed 0110010001100000
@ee 1011001101100010
@ef 1010001101100001
@f0 1000000001100000

// Loop back to ed
@f1 000 10 1111 1100

// RESTORE REG USED
@f2 010 00 000 111 11
@f3 010 00 001 111 10
@f4 010 00 010 111 01
@f5 010 00 011 111 00
@f6 010 00 100 110 11

// EXIT
@f7 000 11 000 000 00